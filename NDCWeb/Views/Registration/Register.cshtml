@model NDCWeb.Areas.Member.View_Models.CourseRegisterCrtVM
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
  
</style>
<div class="bg-contact2" style="background-image: url('/Component/css/images/bg_01.jpg');">
    <div class="container-contact2">
        <div class="wrap-contact2">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <form class="contact2-form validate-form">
                    <span class="contact2-form-title">

                        COURSE REGISTRATION FORM :  @if (ViewBag.Course != null)
                        {
                            @ViewBag.Course<sup>th</sup>
                        }
                        NDC
                    </span>
                    <div class="infobox" style="margin-left:-25px;">
                        <ol>
                            <li>   Fill up your details, given below, which are required for registration & click on register button. Once the basic Information is provided, your account will be verified at NDC.</li>
                            <li>   Post verfication, you will be forwarded user name & password in your email to log on to NDC website.</li>
                        </ol>
                        <a href="/writereaddata/media/documents/REGISTRATION-ONLY.pdf" style="color:red" target="_blank"> <h3 class="text-center" style="color:red"><img src="~/Component/images/Exclamation-mark-1-animated.gif" height="32" /> How to register</h3></a>
                    </div>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-horizontal">
                        <fieldset class="sec-border">
                            <legend class="sec-border"> Contact Details</legend>
                            <div class="form-group required">
                                <label class="control-label col-sm-4" for="EmailId">Email Id <span class="small"> (preferably use gov.in or nic.in in respect of Indian officer)</span></label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control", value = "", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                                </div>
                                <label class="control-label col-sm-2">Re-type Email Id</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.ConfirmEmail, new { htmlAttributes = new { @class = "form-control", autocomplete = "off", value = "" } })
                                    @Html.ValidationMessageFor(model => model.ConfirmEmail, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="form-group required">
                            </div>
                            <div class="form-group required">
                                @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-sm-4" })
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", type = "tel" } })
                                    @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                                </div>
                                <label class="control-label col-sm-2">Re-type Mobile No</label>
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.ConfirmMobileNo, new { htmlAttributes = new { @class = "form-control", type = "tel" } })
                                    @Html.ValidationMessageFor(model => model.ConfirmMobileNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group required">

                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.WhatsappNo, htmlAttributes: new { @class = "control-label col-sm-4" })
                                <div class="col-md-3">
                                    @Html.EditorFor(model => model.WhatsappNo, new { htmlAttributes = new { @class = "form-control", type = "tel" } })
                                    @Html.ValidationMessageFor(model => model.WhatsappNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </fieldset>
                        <fieldset class="sec-border">
                            <legend class="sec-border">Personal Details</legend>
                            <div class="form-group required">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Honour, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Honour, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Honour, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group required">
                                @Html.LabelFor(model => model.DOBirth, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.DOBirth, new { htmlAttributes = new { @class = "form-control datepickerJq1", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.DOBirth, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group required">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownList("Gender", (IEnumerable<SelectListItem>)ViewBag.Gender, "-- Select --", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group required">
                                @Html.LabelFor(model => model.Service, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownList("Service", (IEnumerable<SelectListItem>)ViewBag.Service, "-- Select --", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Service, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.RankId, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownList("RankId", new SelectList(string.Empty, "Value", "Text"), "-- Select --", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.RankId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Branch, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Branch, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Branch, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.DOCommissioning, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.DOCommissioning, new { htmlAttributes = new { @class = "form-control datepickerJq1", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.DOCommissioning, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.SeniorityYear, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @*@Html.EditorFor(model => model.SeniorityYear, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off", @maxlength = "4", @type = "number"    } })*@
                                    @Html.DropDownListFor(model => model.SeniorityYear, Enumerable.Range(1960, 64).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SeniorityYear, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </fieldset>
                        <fieldset class="sec-border">
                            <legend class="sec-border">Appointment (Present, for Indian Officers Only) </legend>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ApptDesignation, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.ApptDesignation, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ApptDesignation, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ApptOrganisation, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.ApptOrganisation, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ApptOrganisation, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ApptLocation, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.ApptLocation, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.ApptLocation, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-4" for="_Captcha"></label>
                                <div class="col-md-8">

                                </div>
                            </div>
                        </fieldset>
                    </div>
                    <fieldset class="sec-border">
                        <legend class="sec-border"></legend>

                        <div class="container-contact2-form-btn">
                            @Html.Partial("_Captcha")
                        </div>
                        <hr />
                        <div class="card-footer text-center">
                            <a class="btn btn-primary btn-lg" onclick="viewAck()">Review & Submit</a><br />
                            <button style="visibility:hidden" type="submit" id="btnSave" value="Register">Register</button>
                        </div>
                        <div class="container-contact2-form-btn">
                            <div class="wrap-contact2-form-btn">
                                <div class="contact2-form-bgbtn"></div>
                                @*<button type="reset" class="btn contact2-form-btn">Submit</button>*@
                            </div>
                        </div>
                    </fieldset>
                </form>
            }
        </div>
    </div>
</div>
<div id="dialog"></div>

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Component/Custom/js/utils.js"></script>
    <script src="~/Component/Custom/js/intlTelInput.js"></script>
    <script src="~/Component/js/CourseRegistration.js"></script>
}
