@model IEnumerable<NDCWeb.Areas.Member.View_Models.ForumBlogAllVM>
@using NDCWeb.Infrastructure.Extensions;
@{
    ViewBag.Title = "List of of Document(s) Uploaded by Participants";
    string clclass = "";
}
<style>
   .notreaded  {
        color: navy;
        font-weight: bold
    }
</style>
@Styles.Render("~/bundles/datatables/ButtonCss")
<link href="~/Component/DataTable2/Buttons-1.6.1/css/buttons.dataTables.min.css" rel="stylesheet" />
<link href="~/Component/DataTable2/Buttons-1.6.1/css/buttons.jqueryui.min.css" rel="stylesheet" />
<div class="container  card">
    <div class="main-card  card">
        <div class="card-body">
            <h5 class="card-title">@ViewBag.Title</h5>
            <table class="mb-0 table table-hover table-bordered tab w-100" id="myTable">
                <thead>
                    <tr>
                        <th>
                        </th>
                        <th style="vertical-align: middle; white-space: nowrap">
                            Locker No
                        </th>
                        <th style="vertical-align: middle; white-space: nowrap">
                            Full Name
                        </th>
                        <th style="vertical-align: middle; white-space: nowrap">
                            @Html.DisplayNameFor(model => model.Category)
                        </th>
                        <th style="vertical-align: middle; white-space: nowrap">
                            @Html.DisplayNameFor(model => model.Module)
                        </th>
                        <th style="vertical-align: middle; white-space: nowrap">
                            @*@Html.DisplayNameFor(model => model.Description)*@
                            Brief Description
                        </th>
                        <th style="vertical-align: middle; white-space: nowrap">
                            SDS Comments
                        </th>
                        <th style="vertical-align: middle; white-space: nowrap">
                            Log Activity
                        </th>
                        <th style="vertical-align: middle; white-space: nowrap">
                            Uploaded On
                        </th>
                        <th style="vertical-align: middle; white-space: nowrap">
                            @Html.DisplayNameFor(model => model.Status)
                        </th>
                        <th style="vertical-align: middle; white-space: nowrap">
                            View
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {

                        string statused;
                        statused = item.Status.ToString();
                        
                     
                            if (statused == "Return")
                            {
                                statused = "Returned";
                            }
                            else if (statused == "Accept")
                            {
                                statused = "Accepted";
                            }
                            else
                            {

                            }
                            if (!string.IsNullOrEmpty(item.IsReaded))
                            {
                                if (item.IsReaded == "Y")
                                {
                                    clclass = "notreaded";
                                }
                                else
                                {
                                    clclass = "na";
                                }
                            }
                            else
                            {
                                clclass = "na";
                            }
                        
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.ForumBlogId)
                            </td>
                            <td class="@clclass">
                                @Html.DisplayFor(modelItem => item.LockerNo)
                            </td>
                            <td class="@clclass">
                                @Html.DisplayFor(modelItem => item.MemberFullName)
                            </td>
                            <td class="@clclass">
                                @Html.DisplayFor(modelItem => item.Category)
                            </td>
                            <td class="@clclass">
                                @Html.DisplayFor(modelItem => item.Module) @*ADD BY AMITESH*@
                            </td>
                            <td class="@clclass">
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td class="@clclass">
                                @Html.DisplayFor(modelItem => item.StaffRemark)
                            </td>
                            <td class="@clclass">
                                @Html.DisplayFor(modelItem => item.MemberRemark)
                            </td>
                            <td class="@clclass">
                                @if (item.LastUpdatedAt.HasValue)
                                {
                                    @Html.DisplayFor(modelItem => item.LastUpdatedAt)
                                }
                                else if (item.CreatedAt.HasValue)
                                {
                                    @Html.DisplayFor(modelItem => item.CreatedAt)
                                }
                            </td>
                            <td class="@clclass">
                                @Html.DisplayFor(modelItem => statused)
                            </td>
                            <td>
                                @*<span class="badge badge-primary">@Html.DisplayFor(modelItem => item.iForumBlogMedias.Count)</span> &nbsp;*@
                                @*<a class="btn btn-outline-primary" href="@Url.Action("ShowMediaFiles", new { id = item.ForumBlogId })" target="_blank"><i class="fa fa-eye"></i></a>
            <a class="btn btn-outline-primary" href="@Url.Action("ForumBlogEdit", new { id = item.ForumBlogId })"><i class="fa fa-pencil"></i></a>*@
                                @Html.EncodedActionLink("", "ShowMediaFiles", "Assignment", "staff", new { id = item.ForumBlogId }, new { @class = "" }, "fa fa-eye")
                                @Html.EncodedActionLink("", "ForumBlogEdit", "Assignment", "staff", new { id = item.ForumBlogId }, new { @class = "" }, "fa fa-pencil")

                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/datatables/ButtonJs")
<script>
    //LoadJDTSorted('#myTable');
    function Delete(id, event)
    {
        var TableId = "#myTable";
        var Jsonurl = '@Url.Action("DeleteOnConfirm")';
        DeleteJDTRow(id, event, TableId, Jsonurl)
        }
    function MarkAsRead(id, event)
    {
    var TableId = "#myTable";
    var Jsonurl = '@Url.Action("MarkAsRead")';
    MarkAsReadJDTRow(id, event, TableId, Jsonurl)
}
</script>
    <script>
        $(document).ready(function () {
            var crrtdate = getDateTime();
            var fileName = 'ONLINE UPLOAD LIST_' + crrtdate;
            oTable = $('#myTable').DataTable({
                "scrollX": true,
                "processing": true,
                "order": [[0, "desc"]],
                "columnDefs": [{ "targets": [0], "visible": false, "searchable": false }],
                dom: 'Bfrtip',
                buttons: [
                    {
                        extend: 'excelHtml5',
                        text: '<i class="fa fa-file-excel-o"> Excel</i>',
                        exportOptions: {
                            columns: ':visible',
                            columns: [1, 2, 3, 4, 5, 6, 7]
                        }
                    },
                    {
                        extend: 'pdfHtml5',
                        orientation: 'landscape',
                        pageSize: 'A4',
                        text: '<i class="fa fa-file-pdf-o"> PDF</i>',
                        //exportOptions: { columns: [0, 1, 2, 5] },
                        exportOptions: {
                            //columns: [0, 1, 2, 4, 5, 6, 7, 8],
                            columns: [1, 2, 3, 4, 5, 6, 7],
                            alignment: 'center'
                        },
                        layout: 'lightHorizontalLines',
                        //title:'JOBS OPPORTUNITIES FOR OFFICERS',
                        title: fileName,
                        titleAttr: 'PDF',
                        customize: function (doc) {
                            doc.content.splice(0, 1);
                            doc['header'] = (function () {
                                return {
                                    columns: [
                                        {
                                            alignment: 'center',
                                            fontSize: 13,
                                            bold: true,
                                            decoration: 'underline',
                                            text: 'ONLINE UPLOAD LIST'
                                        }
                                    ],
                                    margin: 10,
                                    alignment: 'center'
                                }
                            });
                            var objLayout = {};
                            objLayout['hLineWidth'] = function (i) { return .5; };
                            objLayout['vLineWidth'] = function (i) { return .5; };
                            objLayout['hLineColor'] = function (i) { return '#000'; };
                            objLayout['vLineColor'] = function (i) { return '#000'; };
                            objLayout['paddingLeft'] = function (i) { return 4; };
                            objLayout['paddingRight'] = function (i) { return 4; };
                            doc.content[0].layout = objLayout;
                            doc.content[0].alignment = 'center'
                        }
                    },
                    'colvis'
                ],
                select: true
            });
            oTable.on('order.dt search.dt', function () {
                oTable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();
            oTable.on('order.dt search.dt', function () {
                oTable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                    oTable.cell(cell).invalidate('dom');
                });
            }).draw();
        });
    </script>
}