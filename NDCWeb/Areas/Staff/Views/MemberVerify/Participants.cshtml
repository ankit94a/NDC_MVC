@model IEnumerable<NDCWeb.Areas.Member.View_Models.CourseRegisterIndxVM>
@using NDCWeb.Infrastructure.Extensions;
@{
    ViewBag.Title = "List of Registered Participants";
    Layout = "~/Areas/Staff/Views/Shared/_Layout.cshtml";
}


<style>
    /* Fix table height with smooth scroll */
    #myTable_wrapper .dataTables_scrollBody {
        max-height: 70vh !important;
        overflow-y: auto !important;
        overflow-x: auto !important;
        scroll-behavior: smooth;
    }

    /* Sticky header + Gradient */
    #myTable thead th {
        background: linear-gradient(135deg, #c7151ff7, #600208) !important;
        color: #fff !important;
        font-weight: bold !important;
        text-align: center;
        position: sticky;
        top: 0;
        z-index: 20;
    }

    table.dataTable thead th {
        background: linear-gradient(135deg, #c7151ff7, #600208) !important;
        color: #fff !important;
        font-weight: bold !important;
        text-align: center;
    }

    table.dataTable {
        border-collapse: collapse !important;
        width: 100%;
    }

        table.dataTable th,
        table.dataTable td {
            padding: 10px;
            text-align: left;
        }

</style>

<div class="main-card  mt-2 card">
    <div class="card-body">
        <h5 class="card-title">List of Registered Participants (s)</h5>
        @*<div class="pull-right">
                <a href="@Url.Action("Create","MenuItemMaster")" class="btn-shadow  mt-0 btn btn-primary">Create Menu</a>
            </div>*@
        @Html.AntiForgeryToken()
        <table class="mb-0 table table-hover table-bordered tab w-100" id="myTable">
            <thead class="table-header">
                <tr>
                    <th style="vertical-align: middle; white-space: nowrap">SNo.</th>
                    <th style="vertical-align: middle; white-space: nowrap">
                        @Html.DisplayNameFor(model => model.EmailId)
                    </th>
                    <th style="vertical-align: middle; white-space: nowrap">
                        @Html.DisplayNameFor(model => model.Ranks.Service)
                    </th>
                    <th style="vertical-align: middle; white-space: nowrap">
                        Rank
                    </th>
                    <th style="vertical-align: middle; white-space: nowrap">
                        Name
                    </th>
                    <th style="vertical-align: middle; white-space: nowrap">
                        NIC Name(For Name Tab)
                    </th>
                    <th style="vertical-align: middle; white-space: nowrap">
                        @*@Html.DisplayNameFor(model => model.MobileNo)*@
                        Mobile No
                    </th>
                    <th style="vertical-align: middle; white-space: nowrap">
                        @Html.DisplayName("Registered On")
                    </th>
                    <th style="vertical-align: middle; white-space: nowrap">
                        @Html.DisplayName("Verified On")
                    </th>
                    <th style="vertical-align: middle; white-space: nowrap">
                        @Html.DisplayName("Action")
                    </th>
                    <th style="vertical-align: middle; white-space: nowrap">
                        @Html.DisplayName("Accomn")
                    </th>
                    <th style="vertical-align: middle; white-space: nowrap">
                        @Html.DisplayName("Status")
                    </th>
                    <th style="vertical-align: middle; white-space: nowrap">
                        @Html.DisplayName("Delete")
                    </th>
                </tr>
            </thead>
            <tbody>
                @{
                    int sno = 0;
                }
                @foreach (var item in Model)
                {
                    <tr>
                        <td style="text-align:center">
                            @{ sno++; }
                            @sno
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EmailId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Ranks.Service)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Ranks.RankName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.MiddleName) @Html.DisplayFor(modelItem => item.LastName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NICName)
                        </td>
                        <th>
                            @Html.DisplayFor(modelItem => item.MobileNo)
                        </th>
                        <td>
                            @if (item.CreateOn != null)
                            {
                                <text>@item.CreateOn.ToString("dd MMM yyyy")</text>
                            }
                        </td>
                        <td>
                            @if (item.VerifyDate != null)
                            {
                                <text>@item.VerifyDate.Value.ToString("dd MMM yyyy")</text>
                            }
                        </td>
                        <td>
                            @if (item.Approved == true)
                            {
                                <button type="button" class="btn btn-success btn-sm" onclick="resetMemberPswrd(@item.CourseRegisterId)">Reset_Login</button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-warning btn-sm w-100" onclick="verifyMember(@item.CourseRegisterId, this)">Verify</button>
                            }
                        </td>
                        <td>
                            @if (item.Approved == true)
                            {
                                @*<a href="@Url.Action("accomodationprint", new { id = item.UserId })" class="btn btn-primary btn-sm mt-2">Acomdtn</a>*@
                                @Html.EncodedActionLink("Acomdtn", "AccomodationPrint", "MemberVerify", "staff", new { id = item.UserId }, new { @class = "btn btn-primary btn-sm mt-2" }, "")

                            }
                            else
                            {

                            }
                        </td>
                        <td>
                            @if (item.Approved == true)
                            {
                                <label class="badge badge-success">Verified</label>
                            }
                            else
                            {
                                <label class="badge badge-danger">Pending</label>
                            }
                        </td>
                        <td>
                            @if (item.Approved == false)
                            {
                                <button type="button" class="btn btn-transparent text-danger btn-xs" onclick="Delete(@item.CourseRegisterId, this)"><i class="fa fa-trash red"></i></button>
                            }
                        </td>


                        @*<td>
                                <a href="@Url.Action("Edit", new { id = item.MenuId })"><i class="fa fa-edit"></i></a>
                                <button type="button" class="btn btn-transparent red btn-xs" onclick="Delete(@item.MenuId, this)"><i class="fa fa-trash"></i></button>
                            </td>*@
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/datatables/ButtonJs")

    <script>
        //LoadJDT('#myTable');
        var token = $('input[name="__RequestVerificationToken"]').val();
        function Delete(id, event) {
            var TableId = "#myTable";
            var Jsonurl = '@Url.Action("ParticipantDeleteOnConfirm")';
            DeleteJDTRow(id, event, TableId, Jsonurl)
        }
        function resetMemberPswrd(memberRegId) {
            $.ajax({
                type: 'post',
                data: { memberRegId: memberRegId, __RequestVerificationToken: token },
                url: '@Url.Action("ResetLoginUser")',
                /*datatype: 'json',*/
                success: function (data) {
                    toastr.info(data);
                },
                error: function () {
                    toastr.error('Server Not Found!');
                }
            });
        }
        function verifyMember(id, event) {
            let row = event.parentNode.parentNode;
            let member = {
                UserName: row.cells[1].innerHTML.trim(),
                FName: row.cells[4].innerHTML.trim(),
                Email: row.cells[1].innerHTML.trim(),
                PhoneNumber: row.cells[6].innerHTML.trim(),
            }
            $.ajax({
                type: 'post',
                url: '@Url.Action("VerifyMember","Account", new { Area = "Admin" })',
                data: { regId: id, member: member, __RequestVerificationToken: token},
              /*  datatype: 'json',*/
                success: function (data) {
                    toastr.info(data);
                    //alert(xhr.getResponseHeader('location'));
                },
                error: function () {
                    toastr.error('Server Not Found!');
                }
            })
        }
    </script>

    <script>
        $(document).ready(function () {
            var crrtdate = getDateTime();
            var fileName = 'REGISTERED PARTICIPANTS LIST_' + crrtdate;
            oTable = $('#myTable').DataTable({
                "paging": false,
                "scrollX": true,
                scrollY: "65vh",
                "processing": true,
                dom: 'Bfrtip',
                buttons: [
                    {
                        extend: 'excelHtml5',
                        text: '<i class="fa fa-file-excel-o"> Excel</i>',
                        exportOptions: {
                            columns: ':visible',
                            columns: [0, 1, 2, 3, 4, 5, 6, 7, 9]
                        }
                    },
                    {
                        extend: 'pdfHtml5',
                        orientation: 'landscape',
                        pageSize: 'A4',
                        text: '<i class="fa fa-file-pdf-o"> PDF</i>',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5, 6, 7, 9],
                            alignment: 'center'
                        },
                        layout: 'lightHorizontalLines',
                        title: fileName,
                        titleAttr: 'PDF',
                        customize: function (doc) {
                            doc.content.splice(0, 1);
                            doc['header'] = (function () {
                                return {
                                    columns: [
                                        {
                                            alignment: 'center',
                                            fontSize: 13,
                                            bold: true,
                                            decoration: 'underline',
                                            text: 'REGISTERED PARTICIPANTS LIST'
                                        }
                                    ],
                                    margin: 10,
                                    alignment: 'center'
                                }
                            });
                            var objLayout = {};
                            objLayout['hLineWidth'] = function (i) { return .5; };
                            objLayout['vLineWidth'] = function (i) { return .5; };
                            objLayout['hLineColor'] = function (i) { return '#000'; };
                            objLayout['vLineColor'] = function (i) { return '#000'; };
                            objLayout['paddingLeft'] = function (i) { return 4; };
                            objLayout['paddingRight'] = function (i) { return 4; };
                            doc.content[0].layout = objLayout;
                            doc.content[0].alignment = 'center'
                        }
                    },
                    'colvis'
                ],
                select: true
            });
            //oTable.on('order.dt search.dt', function () {
            //    oTable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
            //        cell.innerHTML = i + 1;
            //    });
            //}).draw();
            //oTable.on('order.dt search.dt', function () {
            //    oTable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
            //        cell.innerHTML = i + 1;
            //        oTable.cell(cell).invalidate('dom');
            //    });
            //}).draw();
        });
    </script>
}