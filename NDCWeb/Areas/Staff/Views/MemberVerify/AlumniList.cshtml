@model IEnumerable<NDCWeb.View_Models.AlumniIndxVM>

@{
    ViewBag.Title = "List of Alumni Registered with NDC";
}
@Styles.Render("~/bundles/datatables/ButtonCss")
<link href="~/Component/DataTable2/Buttons-1.6.1/css/buttons.dataTables.min.css" rel="stylesheet" />
<link href="~/Component/DataTable2/Buttons-1.6.1/css/buttons.jqueryui.min.css" rel="stylesheet" />

<div class="main-card  mt-2 card">
    <div class="card-body">
        <h5 class="card-title">List of Registered Alumni (s)</h5>
        <table class="mb-0 table table-hover table-bordered tab w-100" id="myTable">
            <thead>
                <tr>
                    <th style="visibility:hidden"></th>
                    <th style="width: 5%; vertical-align: middle; white-space: nowrap">
                        @*@Html.DisplayNameFor(model => model.CourseSerNo)*@
                        Course No
                    </th>
                    <th style="width: 10%; text-wrap: normal; vertical-align: middle">
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                    <th style="vertical-align:middle">
                        @Html.DisplayNameFor(model => model.ServiceId)
                    </th>
                    <th style="vertical-align:middle">
                        @*@Html.DisplayNameFor(model => model.ServiceRank)*@
                        Rank
                    </th>
                    <th style="vertical-align:middle">
                        Full Name
                    </th>
                    <th style="vertical-align: middle; white-space: nowrap">
                        @Html.DisplayNameFor(model => model.MobileNo)
                    </th>
                    <th style="vertical-align: middle; white-space: nowrap">
                        @*@Html.DisplayNameFor(model => model.RegDate)*@
                        Reg Date
                    </th>
                    <th style="vertical-align: middle; white-space: nowrap">
                        Verified Date
                        @*@Html.DisplayNameFor(model => model.VerifyDate)*@
                    </th>
                    <th style="vertical-align: middle; white-space: nowrap">
                        @Html.DisplayName("View Bio")
                    </th>
                    <th style="vertical-align: middle; white-space: nowrap">
                        @Html.DisplayName("Profile")
                    </th>
                    <th style="vertical-align: middle; white-space: nowrap">
                        @Html.DisplayName("Delete")
                    </th>
                    <th style="vertical-align: middle; white-space: nowrap">
                        @Html.DisplayName("Status")
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td style="visibility:hidden">
                            @Html.DisplayFor(modelItem => item.AluminiId)
                        </td>
                        <td style="text-align:center">
                            @Html.DisplayFor(modelItem => item.CourseSerNo)
                        </td>
                        <td style="width:10%; text-wrap:initial">
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ServiceId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ServiceRank)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.Surname)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MobileNo)
                        </td>
                        <td>
                            @if (item.RegDate != null)
                            {
                                <text>@item.RegDate.Value.ToString("dd MMM yyyy")</text>
                            }
                        </td>
                        <td>
                            @if (item.VerifyDate != null)
                            {
                                <text>@item.VerifyDate.Value.ToString("dd MMM yyyy")</text>
                            }
                        </td>
                        <td>
                            <a href="@Url.Action("AlumniDetail", new { id = item.AluminiId })"><i class="fa fa-eye"></i> View</a>
                        </td>
                        <td>
                            @if (item.Verified == true)
                            {
                                <button type="button" class="btn btn-success btn-sm" onclick="resetAlumniPswrd(@item.AluminiId)">Reset</button>
                            }
                            else
                            {
                                <button type="button" class="btn btn-info btn-sm" onclick="verifyMember(@item.AluminiId, this)">Verify</button>
                            }
                        </td>
                        <td>
                            <button type="button" class="btn btn-transparent text-danger btn-xs" onclick="Delete(@item.AluminiId, this)"><i class="fa fa-trash red"></i></button>
                        </td>
                        <td>
                            @if (item.Verified == true)
                            {
                                <label class="badge badge-success">Verified</label>
                            }
                            else
                            {
                                <label class="badge badge-danger">Pending</label>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/datatables/ButtonJs")
    <script>
        //LoadJDT('#myTable');
        var token = $('input[name="__RequestVerificationToken"]').val();
    function Delete(id, event) {
        var TableId = "#myTable";
        var Jsonurl = '@Url.Action("DeleteOnConfirm")';
        DeleteJDTRow(id, event, TableId, Jsonurl)
        }
    function resetAlumniPswrd(memberRegId) {
            $.ajax({
                type: 'post',
                data: { alumniRegId: memberRegId, __RequestVerificationToken: token },
                url: '@Url.Action("AlumniLoginReset")',
                /*datatype: 'json',*/
                success: function (data) {
                    toastr.info(data);
                },
                error: function () {
                    toastr.error('Server Not Found!');
                }
            });
        }
    function verifyMember(id, event) {
            let row = event.parentNode.parentNode;
            let member = {
                UserName: row.cells[1].innerHTML.trim(),
                FName: row.cells[4].innerHTML.trim(),
                Email: row.cells[1].innerHTML.trim(),
                PhoneNumber: row.cells[5].innerHTML.trim(),
            }
            $.ajax({
                type: 'post',
                url: '@Url.Action("VerifyAlumni", "MemberVerify")',
                data: { regId: id, member: member, __RequestVerificationToken: token },
                /*datatype: 'json',*/
                success: function (data) {
                    toastr.info(data);
                    //alert(xhr.getResponseHeader('location'));
                },
                error: function () {
                    toastr.error('Server Not Found!');
                }
            })
        }
    </script>
    <script>
        $(document).ready(function () {
            var crrtdate = getDateTime();
            var fileName = 'REGISTERED ALUMNI LIST_' + crrtdate;
            oTable = $('#myTable').DataTable({
                "scrollX": true,
                "processing": true,
                "order": [[0, "desc"]],
                "columnDefs": [{ "targets": [0], "visible": false, "searchable": false }],
                dom: 'Bfrtip',
                buttons: [
                    {
                        extend: 'excelHtml5',
                        text: '<i class="fa fa-file-excel-o"> Excel</i>',
                        exportOptions: {
                            columns: ':visible',
                            columns: [1, 2, 3, 4, 5, 6, 7]
                        }
                    },
                    {
                        extend: 'pdfHtml5',
                        orientation: 'landscape',
                        pageSize: 'A4',
                        text: '<i class="fa fa-file-pdf-o"> PDF</i>',
                        exportOptions: {
                            columns: [1, 2, 3, 4, 5, 6, 7],
                            alignment: 'center'
                        },
                        layout: 'lightHorizontalLines',
                        title: fileName,
                        titleAttr: 'PDF',
                        customize: function (doc) {
                            doc.content.splice(0, 1);
                            doc['header'] = (function () {
                                return {
                                    columns: [
                                        {
                                            alignment: 'center',
                                            fontSize: 13,
                                            bold: true,
                                            decoration: 'underline',
                                            text: 'REGISTERED ALUMNI LIST'
                                        }
                                    ],
                                    margin: 10,
                                    alignment: 'center'
                                }
                            });
                            var objLayout = {};
                            objLayout['hLineWidth'] = function (i) { return .5; };
                            objLayout['vLineWidth'] = function (i) { return .5; };
                            objLayout['hLineColor'] = function (i) { return '#000'; };
                            objLayout['vLineColor'] = function (i) { return '#000'; };
                            objLayout['paddingLeft'] = function (i) { return 4; };
                            objLayout['paddingRight'] = function (i) { return 4; };
                            doc.content[0].layout = objLayout;
                            doc.content[0].alignment = 'center'
                        }
                    },
                    'colvis'
                ],
                select: true
            });
            //oTable.on('order.dt search.dt', function () {
            //    oTable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
            //        cell.innerHTML = i + 1;
            //    });
            //}).draw();
            //oTable.on('order.dt search.dt', function () {
            //    oTable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
            //        cell.innerHTML = i + 1;
            //        oTable.cell(cell).invalidate('dom');
            //    });
            //}).draw();
        });
    </script>
}