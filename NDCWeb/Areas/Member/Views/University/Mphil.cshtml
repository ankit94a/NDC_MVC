@model NDCWeb.Areas.Member.View_Models.MPhilMemberEnrolVM
@{
    ViewBag.Title = "APPLICATION FOR ADMISSION TO THE M.PHIL PROGRAMMES IN AFFILIATED COLLEGES/INSTITUTIONS";
    Layout = "~/Areas/Member/Views/Shared/_Layout.cshtml";
}
<link href="~/Component/cmsupify/uploadify.css" rel="stylesheet" />
<div class="container shadow pt-2 mb-4">
    @using (Html.BeginForm(new { id = "form1" }))
    {
        @Html.AntiForgeryToken()
        <div class="card">
            <div class="card-header" style="background-color:#fff">
                @ViewBag.Title

                <span class="pull-right"><a href="/home/faqs/" target="_blank" class="btn btn-info btn-sm">FAQs</a></span>
                <span class="pull-right"><a href="/member/participant/course/mphil-phd-guidelines/" target="_blank" class="btn btn-info btn-sm">Guideline</a>&nbsp;</span>
            </div>
            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.CollegeApplied, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CollegeApplied, new { htmlAttributes = new { @class = "form-control", @Value = "National Defence College, New Delhi" } })
                        @Html.ValidationMessageFor(model => model.CollegeApplied, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.ApplicantNameEnglish, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.ApplicantNameEnglish, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ApplicantNameEnglish, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.ApplicantNameVernacular, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.ApplicantNameVernacular, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ApplicantNameVernacular, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6">
                        <lable class="control-label">Permanent Address </lable>
                        @Html.TextAreaFor(model => model.PermanentAddress, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PermanentAddress, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6">
                        <lable class="control-label">Address for Communication </lable>

                        @Html.TextAreaFor(model => model.CommunicationAddress, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CommunicationAddress, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.PermanentPin, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.PermanentPin, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PermanentPin, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.PermanentMob, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.PermanentMob, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PermanentMob, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.CommunicationPin, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CommunicationPin, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CommunicationPin, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.CommunicationMob, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CommunicationMob, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CommunicationMob, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row mt-4">
                    <div class="form-group col-md-5">
                        @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.DOBirth, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.DOBirth, new { htmlAttributes = new { @class = "form-control datepickerJq1", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.DOBirth, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-2">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("Gender", (IEnumerable<SelectListItem>)ViewBag.Gender, "-- Select --", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.Nationality, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.MotherName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.Community, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("Community", (IEnumerable<SelectListItem>)ViewBag.Community, "-- Select --", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Community, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    @*<div class="form-group col-md-2">
                            @Html.LabelFor(model => model.IsDisabled, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.IsDisabled, new { htmlAttributes = new { @class = "custom-checkbox", @type = "radio" } })
                        </div>*@
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.PhysicalHandicap, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.PhysicalHandicap, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhysicalHandicap, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.YearsStudies, htmlAttributes: new { @class = "control-label" })<br />
                        <input type="radio" name="YearsStudies" value="11+1+3+2" class="custom-checkbox message_pri" />11+1+3+2 = 17 Yrs<br />
                        <input type="radio" name="YearsStudies" value="10+2+3+2" class="custom-checkbox message_pri" />10+2+3+2 = 17 Yrs<br />
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.DegreeName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.DegreeName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DegreeName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        @Html.LabelFor(model => model.SubjectMain, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.SubjectMain, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SubjectMain, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.UniversityCollegeStudied, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.UniversityCollegeStudied, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UniversityCollegeStudied, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="card ml-1" style="margin-left:-10px !important">
                    <div class="card-header" style="margin-left:10px !important">
                        <b> Provide Details of Post Graduate Study</b>
                    </div>
                    <div class="card-body">
                        <table class="table table-secondary">
                            <thead>
                                <tr>
                                    <th rowspan="2">Regn No</th>
                                    <th rowspan="2">Month & Year of Passing</th>
                                    <th rowspan="2">Title of the Paper</th>
                                    <th colspan="2">Marks Awarded</th>
                                    <th colspan="2">Max Marks</th>
                                </tr>
                                <tr>
                                    <th>IA<small> (Internal Assessment)</small></th>
                                    <th>UA<small> (University Examination)</small></th>
                                    <th>IA<small> (Internal Assessment)</small></th>
                                    <th>UA<small> (University Examination)</small></th>
                                </tr>
                            </thead>
                            <tbody id="new_pg" class="bg-white">
                                <tr>
                                    <td>
                                        <input type="text" name="pgRegnNo" id="pgRegnNo_1" class="form-control" placeholder="Regn No">
                                    </td>
                                    <td>
                                        <input type="text" name="pgMonthYearPass" id="pgMonthYearPass_1" class="form-control monthPicker" placeholder="MMM/YYYY" autocomplete="off">
                                    </td>
                                    <td>
                                        <input type="text" name="pgPaperTitle" id="pgPaperTitle_1" class="form-control" placeholder="Paper Title">
                                    </td>
                                    <td>
                                        <input type="text" name="pgAwardedIA" id="pgAwardedIA_1" class="form-control" placeholder="Marks Awarded IA">
                                    </td>
                                    <td>
                                        <input type="text" name="pgAwardedUE" id="pgAwardedUE_1" class="form-control" placeholder="Marks Awarded UE">
                                    </td>
                                    <td>
                                        <input type="text" name="pgMaxIA" id="pgMaxIA_1" class="form-control" placeholder="Max IA">
                                    </td>
                                    <td>
                                        <input type="text" name="pgMaxUE" id="pgMaxUE_1" class="form-control" placeholder="Max UE">
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <input type="hidden" value="1" id="total_pg">
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <button type="button" class="add-PostGrad btn btn-outline-primary btn-sm"><i class="fa fa-plus"></i> Add more</button>
                                <button type="button" class="remove-PostGrad btn btn-outline-danger ml-2 btn-sm"><i class="fa fa-minus"></i> Remove</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card ml-1" style="margin-left:-10px !important">
                    <div class="card-header" style="margin-left:10px !important">
                        <b> Enclosures (Upload attested copies only)</b>
                    </div>
                    <div class="card-body border-bottom">
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                @Html.Label("Your Photo", htmlAttributes: new { @class = "control-label" })
                                <input id="picfile" type="file" required name="picfile" onchange="imgValidate('picfile', 'MemberImgPath')" class="uploadify-button form-control-file" accept="image/jpeg,image/png"  />
                                <p class="text-info">400x400, Max size 250 KB, File Type (.jpg, .jpeg, .png)</p>
                                @Html.EditorFor(model => model.MemberImgPath, new { htmlAttributes = new { @class = "form-control", @style = "display: none" } })
                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("Marks Statement", htmlAttributes: new { @class = "control-label" })
                                <input id="marksStatementfile" type="file" required name="marksStatementfile" onchange="docValidate('marksStatementfile', 'MarksStatementDocPath')" class="uploadify-button form-control-file" accept="image/jpeg,image/png,application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.ms-excel" />
                                <p class="text-info">Max size 2 MB, File Type (.pdf, .jpg, .png)</p>
                                @Html.EditorFor(model => model.MarksStatementDocPath, new { htmlAttributes = new { @class = "form-control", @style = "display: none" } })
                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("Post Graduate Degree", htmlAttributes: new { @class = "control-label" })
                                <input id="postGradDegreefile" type="file" required name="postGradDegreefile" onchange="docValidate('postGradDegreefile', 'PostGradDegreeDocPath')" class="uploadify-button form-control-file" accept="image/jpeg,image/png,application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.ms-excel" />
                                <p class="text-info">Max size 2 MB, File Type (.pdf, .jpg, .png)</p>
                                @Html.EditorFor(model => model.PostGradDegreeDocPath, new { htmlAttributes = new { @class = "form-control", @style = "display: none" } })
                            </div>
                            <div class="form-group col-md-6">
                                @Html.Label("Equivalent Course Certificate", htmlAttributes: new { @class = "control-label" })
                                <input id="courseCertificatefile" type="file" name="courseCertificatefile" onchange="docValidate('courseCertificatefile', 'CourseCertificateDocPath')" class="uploadify-button form-control-file" accept="image/jpeg,image/png,application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.ms-excel" />
                                <p class="text-info">Max size 2 MB, File Type (.pdf, .jpg, .png)</p>
                                @Html.EditorFor(model => model.CourseCertificateDocPath, new { htmlAttributes = new { @class = "form-control", @style = "display: none" } })
                            </div>
                            <div class="form-group col-md-4">
                                @Html.Label("Translated Copy (in English)", htmlAttributes: new { @class = "control-label" })
                                <input id="translatedCopyfile" type="file" required name="translatedCopyfile" onchange="docValidate('translatedCopyfile', 'TranslatedCopyEngDocPath')" class="uploadify-button form-control-file" accept="image/jpeg,image/png,application/pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.ms-excel" />
                                <p class="text-info">Max size 2 MB, File Type (.pdf, .jpg, .png)</p>
                                @Html.EditorFor(model => model.TranslatedCopyEngDocPath, new { htmlAttributes = new { @class = "form-control", @style = "display: none" } })
                            </div>
                            <div class="form-group col-md-8">
                                @Html.LabelFor(model => model.AnyOtherInformation, htmlAttributes: new { @class = "control-label" })
                                @Html.TextAreaFor(model => model.AnyOtherInformation, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AnyOtherInformation, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                </div>
                <div class="card ml-1" style="margin-left:-10px !important">
                    <div class="card-body">
                        <p><b><u>DECLARATION BY THE APPLICANT</u></b></p>
                        <p>
                            <input type="checkbox" class="big-checkbox" name="Undertaking" />
                            @Html.LabelFor(model => model.Undertaking, htmlAttributes: new { @class = "control-label" }) I agree that the authorities may invalidate my application, at any time, if any of the I am aware that my eligibility for
                            information furnished is found to be false. admission for a course will be decided by the concerned admitting authority.
                            @Html.ValidationMessageFor(model => model.Undertaking, "", new { @class = "text-danger" })
                        </p>
                        <hr />
                        <p><u><b>INSTRUCTIONS (PLEASE READ CAREFULLY BEFORE FILLING IN THE APPLICATION)</b></u></p>

                        <p>
                            1 Applications must be completed in all be summarily rejected. respects. Incomplete Applications will be summarily rejected.
                        </p>
                        <p>
                            2. Column No 3, Name in English must be mentioned as per Post Graduation Degree and  the same shall be printed on M.Phil Degree. Name in Vernacular be left blank.
                        </p>
                        <p>
                            3. Column No 4 (a) must mention permanent home address, mobile No and E-Mail ID so that candidate could be contacted for Graduation Ceremony.
                        </p> <p>
                            4. The fee may be paid by Local Cheque/DD in favour of <b>"NDC, University Division Fund"</b> or by cash.

                        </p>
                        <p>
                            5. In the case of students withdrawing from programmes after admission, REFUND OF FEES will be made by the University under any circumstance
                        </p>
                        <p>
                            6. The filled-in Application should be deposited directly to OIC University Division, NDC
                        </p>
                    </div>
                </div>
                <div class="card-footer text-center bg-white">
                    <input type="button" id="btnSave" value="Save" onclick="addMPhilMember()" class="btn btn-primary btn-sm" />
                    @*<input type="submit" value="Save" class="btn btn-primary" />*@
                    @*<a class="details btn btn-primary btn-sm" href="/member/university/">Save</a>*@
                    <a class="details btn btn-primary btn-sm" href="/member/university/">Back</a>
                </div>
            </div>
            <p>&nbsp;</p>
            <p>&nbsp;</p>
        </div>
    }
    <div class="modal fade" id="mphilmodal" tabindex="-1" role="dialog" aria-labelledby="mphilmodalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header bg-2 text-white">
                    <h4 class="modal-title" id="exampleModalLabel">CHECK LIST FOR M.PHIL</h4>
                </div>
                <div class="modal-body p-4" style="font-size:1.22em">

                    <table class="table table-borderless border">
                        <thead>
                            <tr>
                                <th></th>
                                <th> <label class="text-danger" id="lblWarn"></label></th>
                                <th><b>Yes</b></th>
                                <th><b>No</b></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td style="vertical-align:top">1. </td>
                                <td>On the posted strength of National Defence College.</td>
                                <td><input type="checkbox" class="big-checkbox" id="chk1_1" /></td>
                                <td><input type="checkbox" class="big-checkbox" id="chk1_2" /></td>
                            </tr>
                            <tr>
                                <td style="vertical-align:top">2. </td>
                                <td>Post Graduate Degree with minimum of 55% marks in aggregate if qualified <b>before 01 Jan 1991</b>.</td>
                                <td><input type="checkbox" class="big-checkbox" id="chk2_1" /></td>
                                <td><input type="checkbox" class="big-checkbox" id="chk2_2" /></td>
                            </tr>
                            <tr>
                                <td style="vertical-align:top">3. </td>
                                <td>Post Graduate Degree with minimum of 50% marks in aggregate if qualified <b>after 01 Jan 1991</b>.</td>
                                <td><input type="checkbox" class="big-checkbox" id="chk3_1" /></td>
                                <td><input type="checkbox" class="big-checkbox" id="chk3_2" /></td>
                            </tr>
                            <tr>
                                <td style="vertical-align:top">4. </td>
                                <td>17 Years of studies in School and College (i.e 11+1+3+2 or 10+2+3+2).</td>
                                <td><input type="checkbox" class="big-checkbox" id="chk4_1" /></td>
                                <td><input type="checkbox" class="big-checkbox" id="chk4_2" /></td>
                            </tr>
                            <tr>
                                <td style="vertical-align:top">5. </td>
                                <td>If do not have Post Graduate Degree then must have done a course in Army/Navy/Air Force/Higher Command Course/HDMC from CDM, Secunderabad or any Foreign staff course equivalent to these course (for Indian Officers only)</td>
                                <td><input type="checkbox" class="big-checkbox" id="chk5_1" /></td>
                                <td><input type="checkbox" class="big-checkbox" id="chk5_2" /></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer text-center">
                    @*<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>*@
                    @*<a type="button" id="btnProceed" href="javascript:void()" class="btn btn-primary">Proceed</a>*@
                    <button type="button" id="btnProceed" class="btn btn-primary btn-lg">Close</button>
                    <a href="@Url.Action("Index", "Home")" class="btn btn-primary btn-lg">Back to Home</a>
                </div>
            </div>
        </div>
    </div>
    <style>
        .big-checkbox {
            width: 20px;
            height: 20px;
        }
    </style>
</div>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        // #region Post Grad
        function storePostGrad() {
            let ttlpg = $('#total_pg').val();
            let postGrads = [];
            for (i = 1, j = 0; i <= ttlpg; i++ , j++) {
                postGrads[j] = {
                    RegnNo: $('#pgRegnNo_' + i).val(),
                    MonthYearPass: $('#pgMonthYearPass_' + i).val(),
                    PaperTitle: $('#pgPaperTitle_' + i).val(),
                    AwardedIA: $('#pgAwardedIA_' + i).val(),
                    AwardedUE: $('#pgAwardedUE_' + i).val(),
                    MaxIA: $('#pgMaxIA_' + i).val(),
                    MaxUE: $('#pgMaxUE_' + i).val(),
                };
            }
            return postGrads;
        }

        $('.add-PostGrad').on('click', addPostGrad);
        $('.remove-PostGrad').on('click', removePostGrad);
        function addPostGrad() {
            let new_pg_no = parseInt($('#total_pg').val()) + 1;
            let new_inputPg = `<tr id="PostGrad_${new_pg_no}">
                                <td>
                                       <input type="text" name="pgRegnNo" id="pgRegnNo_${new_pg_no}" class="form-control" placeholder="Regn No">
                                   </td>
                                   <td>
                                       <input type="text" name="pgMonthYearPass" id="pgMonthYearPass_${new_pg_no}" class="form-control monthPicker" placeholder="Month Year Passing" autocomplete="off">
                                   </td>
                                   <td>
                                       <input type="text" name="pgPaperTitle" id="pgPaperTitle_${new_pg_no}" class="form-control" placeholder="Paper Title">
                                   </td>
                                   <td>
                                       <input type="text" name="pgAwardedIA" id="pgAwardedIA_${new_pg_no}" class="form-control" placeholder="Marks Awarded IA">
                                   </td>
                                   <td>
                                       <input type="text" name="pgAwardedUE" id="pgAwardedUE_${new_pg_no}" class="form-control" placeholder="Marks Awarded UE">
                                   </td>
                                   <td>
                                       <input type="text" name="pgMaxIA" id="pgMaxIA_${new_pg_no}" class="form-control" placeholder="Max IA">
                                   </td>
                                   <td>
                                       <input type="text" name="pgMaxUE" id="pgMaxUE_${new_pg_no}" class="form-control" placeholder="Max UE">
                                   </td>
                               </tr>`
            $('#new_pg').append(new_inputPg);
            $('#total_pg').val(new_pg_no);
        }
        function removePostGrad() {
            let last_pg_no = $('#total_pg').val();

            if (last_pg_no > 1) {
                $('#PostGrad_' + last_pg_no).remove();
                $('#total_pg').val(last_pg_no - 1);
            }
        }
        // #endregion

        function fillMPhilMember() {
            let MPhilMember = {
                CollegeApplied: $("#CollegeApplied").val(),
                Subject: $("#Subject").val(),
                ApplicantNameEnglish: $("#ApplicantNameEnglish").val(),
                ApplicantNameVernacular: $("#ApplicantNameVernacular").val(),
                EmailId: $("#EmailId").val(),
                DOBirth: $("#DOBirth").val(),
                FatherName: $("#FatherName").val(),
                MotherName: $("#MotherName").val(),
                Gender: $("#Gender").val(),
                CommunicationAddress: $("#CommunicationAddress").val(),
                CommunicationMob: $("#CommunicationMob").val(),
                CommunicationPin: $("#CommunicationPin").val(),
                PermanentAddress: $("#PermanentAddress").val(),
                PermanentMob: $("#PermanentMob").val(),
                PermanentPin: $("#PermanentPin").val(),
                Nationality: $("#Nationality").val(),
                Community: $("#Community").val(),
                IsDisabled: $("#IsDisabled").val(),
                PhysicalHandicap: $("#PhysicalHandicap").val(),

                YearsStudies: $(".message_pri:checked").val(),
                DegreeName: $("#DegreeName").val(),
                SubjectMain: $("#SubjectMain").val(),
                UniversityCollegeStudied: $("#UniversityCollegeStudied").val(),
                AnyOtherInformation: $("#AnyOtherInformation").val(),

                MemberImgPath: $("#MemberImgPath").val() || '#',
                MarksStatementDocPath: $("#MarksStatementDocPath").val() || '#',
                PostGradDegreeDocPath: $("#PostGradDegreeDocPath").val() || '#',
                CourseCertificateDocPath: $("#CourseCertificateDocPath").val() || '#',
                TranslatedCopyEngDocPath: $("#TranslatedCopyEngDocPath").val() || '#',

                iMPhilPostGraduates: storePostGrad(),
            }
            return MPhilMember;
        }

        function addMPhilMember() {
            if ($("form").valid()) {
                let MPhilMember = fillMPhilMember();
                $.ajax({
                    type: 'post',
                    url: '/api/mphilMembers/Enrol',
                    data: MPhilMember,
                    datatype: 'json',
                    success: function (data, textStatus, xhr) {
                        toastr.info(textStatus);
                        window.location.replace("/member/university/index");
                    },
                    error: function () {
                        alert('Operation Failed!');
                    }
                });
            }
        }

        // #region File Helper
        function imgValidate(fileUploadId, fileLocId) {
            let fileTypes = ['jpg', 'jpeg', 'png', 'pdf'];
            let extValidate = fileExtensionValidation(fileUploadId, fileTypes);
            let sizeValidate = fileSizeValidation(fileUploadId, 1024);
            if (extValidate == true && sizeValidate == true) {
                let url = '@Url.Action("ImageUpload")';
                uploadFile(fileUploadId, fileLocId, url);
            }
            else {
                $('#' + fileLocId).val('');
            }
        }
        function docValidate(fileUploadId, fileLocId) {
            let fileTypes = ['jpg', 'jpeg', 'png','pdf'];
            let extValidate = fileExtensionValidation(fileUploadId, fileTypes);
            let sizeValidate = fileSizeValidation(fileUploadId, 1024);
            if (extValidate == true && sizeValidate == true) {
                let url = '@Url.Action("DocumentUpload")';
                uploadFile(fileUploadId, fileLocId, url);
            }
            else {
                $('#' + fileLocId).val('');
            }
        }
        // #endregion
    </script>
    <script>
        $(document).ready(function () {
            $(".monthPicker").datepicker({
                dateFormat: 'mm-yy',
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,

                onClose: function (dateText, inst) {
                    var month = $("#ui-datepicker-div .ui-datepicker-month :selected").val();
                    var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
                    $(this).val($.datepicker.formatDate('M/yy', new Date(year, month, 1)));
                }
            });

            $(".monthPicker").focus(function () {
                $(".ui-datepicker-calendar").hide();
                $("#ui-datepicker-div").position({
                    my: "center top",
                    at: "center bottom",
                    of: $(this)
                });
            });
            //Modal
            $('#mphilmodal').modal({ backdrop: 'static', keyboard: false });
            $('#lblWarn').hide();
            $('#btnProceed').click(function () {
                if ($('#chk1_1').is(":checked") && $('#chk2_1').is(":checked") || $('#chk3_1').is(":checked")) {
                    $('#mphilmodal').modal('hide');
                }
                else if ($('#chk4_1').is(":checked") || $('#chk5_1').is(":checked")) {
                    $('#mphilmodal').modal('hide');
                }
                else {
                    $('#mphilmodal').modal('show');
                    $('#lblWarn').show();
                    $('#lblWarn').html("Please chose appropriate option to proceed.!");
                }
            });
        });
    </script>
    <script>
        function viewAck() {
            let MPhilMember = fillMPhilMember();
            $.ajax({
                type: "POST",
                url: '@Url.Action("MphilAck")',
                data: { modal: MPhilMember },
                //contentType: "application/json; charset=utf-8",
                dataType: "html",
                success: function (response) {
                    $('#mphilmodal').modal('hide');
                    $('#dialog').html(response);
                    $('#dialog').dialog('open');
                },
                failure: function (response) {
                    alert('Operation Failed!');
                },
                error: function (response) {
                    alert('Server Not Found!');
                }
            });
        }

        $(function () {
            $("#dialog").dialog({
                title: 'Review: - Application for Admission to the M.Phil Programmes in Affiliated Colleges/Institutions',
                autoOpen: false,
                //maxWidth: 800,
                //maxHeight: 700,
                width: 960,
                height: 700,
                modal: true,
                buttons: {
                    Ok: function () {
                        //Add();
                        $("[id*=btnSave]").click();
                    },
                    Cancel: function () {
                        $(this).dialog("close");
                    }
                },
                close: function () {
                }
            });
        });
    </script>
}

