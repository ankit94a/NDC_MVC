@model IEnumerable<NDCWeb.Areas.Member.View_Models.AccomodationIndexVM>
@using NDCWeb.Infrastructure.Extensions;
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Member/Views/Shared/_Layout.cshtml";
}
<div class="container my-4">
    <div class="card shadow-lg border-0 rounded-3">
        <!-- Card Header -->
        <div class="card-header custom-header d-flex justify-content-between align-items-center text-white rounded-top">
            <h5 class="mb-0 d-flex align-items-center">
                <i class="fa fa-file-text-o me-2 ms-2"></i>  Accommodation Form
            </h5>
            <div class="d-flex align-items-center">
                <a href="@Url.Action("Entry","Accomodation")" class="btn btn-primary btn-sm pull-right">Add New</a>
            </div>
        </div>

        <!-- Card Body -->
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover table-bordered align-middle w-100 mb-0" id="dataGrid">
                    <thead class="table-light text-center">
                        <tr>
                            <th>
                                Married Accn Required
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.AccomodationDate)
                            </th>
                            <th>
                                Retaining Accn/Own Arrangement
                            </th>
                            <th>
                                Preference of Accn, Priority 1
                            </th>
                            <th>
                                Preference of Accn, Priority 2
                            </th>
                            <th>
                                Remarks
                            </th>
                            <th>
                                Document(s)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.SignatureDoc)
                            </th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AccomReq)
                                </td>
                                <td>
                                    @if (item.AccomodationDate != null)
                                    {
                                        @Html.DisplayFor(modelItem => item.AccomodationDate)
                                    }
                                    else
                                    {
                                        <span>Nil</span>
                                    }

                                </td>
                                <td>
                                    @if (item.ArrangeType != null)
                                    {
                                        @Html.DisplayFor(modelItem => item.ArrangeType)
                                    }
                                    else
                                    {
                                        <span>Nil</span>
                                    }
                                </td>
                                <td>
                                    @if (item.PriorityFirst != null)
                                    {
                                        @Html.DisplayFor(modelItem => item.PriorityFirst)
                                    }
                                    else
                                    {
                                        <span>Nil</span>
                                    }
                                </td>
                                <td>
                                    @if (item.PrioritySecond != null)
                                    {
                                        @Html.DisplayFor(modelItem => item.PrioritySecond)
                                    }
                                    else
                                    {
                                        <span>Nil</span>
                                    }
                                </td>
                                <td>
                                    @if (item.SpecialRequestWithReason != null)
                                    {
                                        @Html.DisplayFor(modelItem => item.SpecialRequestWithReason)
                                    }
                                    else
                                    {
                                        <span>Nil</span>
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.iAccomodationMedias.Count)
                                    @Html.EncodedActionLink(" View", "ShowMediaFiles", "Accomodation", "member", new { id = item.AccomodationId }, new { @class = "" }, "fa fa-eye")
                                </td>
                                <td>
                                    @if (item.SignatureDoc != null && item.SignatureDoc != "")
                                    {
                                        <a href="@Url.Content(item.SignatureDoc)">View</a>
                                    }
                                </td>
                                <td width="10%">
                                    <a class="btn btn-xs" onclick="Delete(@item.AccomodationId, this)"><i class="fa fa-trash"></i></a>
                                    @Html.EncodedActionLink("", "Print", "Accomodation", "member", new { id = item.AccomodationId }, new { @class = "btn btn-xs" }, "fa fa-print")
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            LoadJDT('#dataGrid');

            function LoadJDT(TableId) {
                oTable = $(TableId).DataTable({
                    "processing": false,
                    "paging": false,        // ❌ No pagination
                    "searching": false,     // ❌ No search box
                    "lengthChange": false,  // ❌ No page size dropdown
                    "ordering": false,      // ❌ Disable column sorting (optional)
                    "info": false,          // ❌ Hide "Showing 1 of 1 entries"
                    "scrollX": false,
                    "autoWidth": false,
                    "responsive": true,
                    "dom": "t"              // ✅ Only table (no extra controls)
                });
            }


            // ✅ Create a reusable SweetAlert2 toast instance
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',   // top-end, bottom-end, bottom-start, etc.
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.onmouseenter = Swal.stopTimer
                    toast.onmouseleave = Swal.resumeTimer
                }
            });

            // ✅ Trigger toaster from TempData
            @if (TempData["SuccessMessage"] != null)
            {
                <text>
                Toast.fire({
                    icon: 'success',
                    title: '@TempData["SuccessMessage"]'
                });
                </text>
            }

            @if (TempData["WarningMessage"] != null)
            {
                <text>
                Toast.fire({
                    icon: 'warning',
                    title: '@TempData["WarningMessage"]'
                });
                </text>
            }

            // ✅ Expose Delete globally
            window.Delete = function (id, event) {
                var TableId = "#dataGrid";
                var Jsonurl = '@Url.Action("DeleteOnConfirm")';
                DeleteJDTRow(id, event, TableId, Jsonurl);
            }
        });
    </script>
}
