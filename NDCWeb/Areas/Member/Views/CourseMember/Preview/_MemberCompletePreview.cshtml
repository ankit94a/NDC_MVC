@model NDCWeb.Areas.Member.View_Models.MemberCompletePreviewVM
    <style>
 


         


          


    </style>

<div id='docPrint'>
    @{

        if (Model.PersonalVM != null)
        {
            @Html.Partial("Preview/_CourseMemberPersonal", Model.PersonalVM)
        }
        if (Model.AppointmentVM != null)
        {
            @Html.Partial("Preview/_AppointmentDetails", Model.AppointmentVM)
        }
        if (Model.QualificationsVM.Count > 1)
        {
            @Html.Partial("Preview/_Qualification", Model.QualificationsVM)
        }
        if (Model.CountryVisitsVM.Count > 1)
        {
            @Html.Partial("Preview/_CountryVisit", Model.CountryVisitsVM)
        }
        if (Model.LanguagesVM.Count > 1)
        {
            @Html.Partial("Preview/_LanguagesKnown", Model.LanguagesVM)
        }
        if (Model.ImportantAssignmentsVM.Count > 1)
        {
            @Html.Partial("Preview/_AssignmentAppointment", Model.ImportantAssignmentsVM)
        }
        if (Model.SpouseVM != null)
        {
            @Html.Partial("Preview/_Spouse", Model.SpouseVM)
        }
        @*if (Model.SpouseQualificationsVM.Count > 1)
            {
                @Html.Partial("Preview/_SpouseQualification", Model.SpouseQualificationsVM)
            }
            if (Model.SpouseLanguagesVM.Count > 1)
            {
                @Html.Partial("Preview/_SpouseLanguage", Model.SpouseLanguagesVM)
            }*@
        if (Model.ChildrensVM.Count > 1)
        {
            @Html.Partial("Preview/_Children", Model.ChildrensVM)
        }
        if (Model.TallyVM != null)
        {
            @Html.Partial("Preview/_Tally", Model.TallyVM)
        }
        if (Model.VehicleStickerVM != null)
        {
            @Html.Partial("Preview/_VehicleSticker", Model.VehicleStickerVM)
        }
        if (Model.AccountInfoVM != null)
        {
            @Html.Partial("Preview/_AccountInfo", Model.AccountInfoVM)
        }

    }
</div>

<div class="panel-footer text-white d-flex justify-content-between">
    <a class="btn btn-outline-secondary rounded-pill px-4 me-2 btnPrevious">
        <i class="bi bi-arrow-left-circle"></i> Previous
    </a>
    @*<a class="btn custom-btn btn-info btn-previous btnPrevious">Previous</a>*@
<a class="btn btn-outline-primary rounded-pill px-4 me-2 btn-print " onclick="printdoc()"> <i class="bi bi-arrow-left-circle"></i>Print</a>

</div>



<script>
    function ShowSaved() {
        alert('File has been submitted successfully');
    }
    function Export() {

        var pdf = new jsPDF('p', 'pt', 'letter');

        pdf.text(50, 25, "Employee Report");
        // source can be HTML-formatted string, or a reference
        // to an actual DOM element from which the text will be scraped.
        source = document.getElementById('docPrint').innerHTML;

        // we support special element handlers. Register them with jQuery-style
        // ID selector for either ID or node name. ("#iAmID", "div", "span" etc.)
        // There is no support for any other type of selectors
        // (class, of compound) at this time.
        specialElementHandlers = {
            // element with id of "bypass" - jQuery style selector
            '#bypassme': function (element, renderer) {
                // true = "handled elsewhere, bypass text extraction"
                return true
            }
        };
        margins = {
            top: 80,
            bottom: 60,
            left: 40,
            width: 522
        };
        // all coords and widths are in jsPDF instance's declared units
        // 'inches' in this case
        pdf.fromHTML(
            source, // HTML string or DOM elem ref.
            margins.left, // x coord
            margins.top, { // y coord
            'width': margins.width, // max width of content on PDF
            'elementHandlers': specialElementHandlers
        },

            function (dispose) {
                // dispose: object with X, Y of the last line add to the PDF
                // this allow the insertion of new lines after html
                pdf.save('Biodata.pdf');
            }, margins);
    }

    $(document).ready(function () {
        $('.btnNext').click(function () {
            $('.nav-tabs .active').parent().next('li').find('a').trigger('click');
        });

        $('.btnPrevious').click(function () {
            $('.nav-tabs .active').parent().prev('li').find('a').trigger('click');
        });
    });

    function printdoc() {
        var mywindow = window.open('', 'PRINT', 'height=700,width=900');
        mywindow.document.write('<html><head>');
        mywindow.document.write("<link href='/Areas/Member/Component/css/bootstrap.min.css' rel='stylesheet'/><link href='/Areas/Member/Component/css/main.css' rel='stylesheet'/><link href='/Areas/Member/Component/css/style.css' rel='stylesheet'/>")
        mywindow.document.write('</head><body >');
        mywindow.document.write(document.getElementById('docPrint').innerHTML);
        mywindow.document.write('</body></html>');

        mywindow.document.close(); // necessary for IE >= 10
        mywindow.focus(); // necessary for IE >= 10*/


        setTimeout(function () {
            mywindow.print();
            mywindow.close();
        }, 1000)
        return true;

        //var newWin = window.open('', 'Print-Window');
        //newWin.document.open();
        //newWin.document.write('<html><body onload="window.print()">' + divToPrint.innerHTML + '</body></html>');
        //newWin.document.close();
        //setTimeout(function () { newWin.close(); }, 10);
    }
</script>
