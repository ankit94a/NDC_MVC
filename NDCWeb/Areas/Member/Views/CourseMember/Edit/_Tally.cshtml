@model NDCWeb.Areas.Member.View_Models.TallyDetailUpVM


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "formCMTally" }))
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.TallyId, new { @id = "hdnTallyId" })
    <div class="card">
        <div class="card-header">
            Name Tally
        </div>
        <div class="card-body">
            <div class="form-row">
                <table class="table table-secondary">
                    <thead>
                        <tr>
                            <th rowspan="2">Rank (in abbreviated form)</th>
                            <th colspan="4">Name</th>
                        </tr>
                        <tr>
                            <th>As per Passport</th>
                            <th>As Required on Name Tab</th>
                            <th>Nick name which you would like to be addressed</th>
                            <th>Service/Country</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                @Html.EditorFor(model => model.RankAbbr, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RankAbbr, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                @Html.EditorFor(model => model.PassportName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PassportName, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                @Html.EditorFor(model => model.TabName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TabName, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                @Html.EditorFor(model => model.NickName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NickName, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                @Html.EditorFor(model => model.CountryService, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CountryService, "", new { @class = "text-danger" })
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="card mt-4">
        <div class="card-header" style="background-color:#fff">
            <span class="font-weight-bold" style="color:red">Important</span>
        </div>
        <div class="card-body text-justify">
            <p>
                College created name tabs will be issued to all course participants. These are expected to be worn on civil clothes. Foreign Course Members, who do not wear name tabs as part of uniform, are requested to wear the samename tabs along with their uniforms also. Wearing of name tabs is mendatory for all outstation and social functions.
            </p>

        </div>
    </div>

    <div class="card mt-4">
        <div class="card-header" style="background-color:#fff">
            Tele Directory of NDC-63
        </div>
        <div class="card-body">
            <div class="form-row">
                <div class="form-group col-md-3">
                    <Label class="control-label">Name/Rank</Label>
                    @Html.EditorFor(model => model.NameORRank, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NameORRank, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-5">
                    <Label class="control-label">Resi Address</Label>
                    @Html.EditorFor(model => model.ResidentialAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ResidentialAddress, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-2">
                    <Label class="control-label">Mobile No</Label>
                    @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", @type = "Numeric" } })
                    @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-2">
                    <Label class="control-label">Tele No</Label>
                    @Html.EditorFor(model => model.TelephoneNo, new { htmlAttributes = new { @class = "form-control", @type = "Numeric" } })
                    @Html.ValidationMessageFor(model => model.TelephoneNo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>


    <div class="card-footer text-center bg-white">
        <input type="button" id="btnSaveTally" value="Submit" onclick="editTally()" class="btn btn-primary btn-lg" />
    </div>
}


@Scripts.Render("~/bundles/jqueryval")
<script>
    function fillTallyDetail() {
        let tally = {
            RankAbbr: $("#RankAbbr").val(),
            PassportName: $("#PassportName").val(),
            TabName: $("#TabName").val(),
            NickName: $("#NickName").val(),
            CountryService: $("#CountryService").val(),
            NameORRank: $("#NameORRank").val(),
            ResidentialAddress: $("#ResidentialAddress").val(),
            MobileNo: $("#MobileNo").val(),
            TelephoneNo: $("#TelephoneNo").val(),

            //BrandModelNo: $("#BrandModelNo").val(),
            //Colour: $("#Colour").val(),
            //RegistrationNo: $("#RegistrationNo").val(),
            //DrivingLicenseNo: $("#DrivingLicenseNo").val(),
            //NoOfVehicle: $("#NoOfVehicle").val(),
            //RegistrationCertificatePath: $("#RegistrationCertificatePath").val() || '#',
            //DrivingLicensePath: $("#DrivingLicensePath").val() || '#',
        }
        return tally;
    }
    function editTally() {
        if ($("#formCMTally").valid()) {
            let tally = fillTallyDetail();
            $.ajax({
                type: 'post',
                url: '/api/courseMembers/TallyEdit/' + $('#hdnTallyId').val(),
                data: tally,
                datatype: 'json',
                success: function (data, textStatus, xhr) {
                    toastr.info(textStatus);
                    displayTab('TallyPartial');
                },
                error: function () {
                    toastr.error('Operation Failed!');
                }
            })
        }
    }
</script>
