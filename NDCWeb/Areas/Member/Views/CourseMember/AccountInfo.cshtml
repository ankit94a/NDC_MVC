@model NDCWeb.Areas.Member.View_Models.AccountInfoCrtVM

@{
    ViewBag.Title = "Account Info";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h3 class="text-center">Account Info</h3>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.PersonalNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PersonalNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PersonalNo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CDAAcNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CDAAcNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CDAAcNo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.BasicPay, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BasicPay, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BasicPay, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.RankPay, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RankPay, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RankPay, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.GradePay, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GradePay, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GradePay, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.AccountNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AccountNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AccountNo, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @*<input type="submit" value="Create" class="btn btn-default" />*@
            <button id="btnSave" onclick="accountInfoAdd()" class="btn btn-default">Save</button>
        </div>
    </div>
</div>
}

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function accountInfoAdd() {
            let accountInfo = {
                PersonalNo: $("#PersonalNo").val(),
                CDAAcNo: $("#CDAAcNo").val(),
                BasicPay: $("#BasicPay").val(),
                RankPay: $("#RankPay").val(),
                GradePay: $("#GradePay").val(),
                AccountNo: $("#AccountNo").val(),
            }

            $.ajax({
                type: 'post',
                url: '/api/courseMembers/AccountInfo',
                data: accountInfo,
                datatype: 'json',
                success: function (data, textStatus, xhr) {
                    alert("success");
                    //alert(xhr.getResponseHeader('location'));
                },
                error: function () {
                    alert('Operation Failed!')
                }
            })
        }
    </script>
}



