@model NDCWeb.Areas.Member.View_Models.BiographyCrtVM

@{
    ViewBag.Title = "Pen Picture";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3 class="text-center">Pen Picture</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.PenPicture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PenPicture, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PenPicture, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FamilyBackground, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FamilyBackground, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FamilyBackground, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EarlySchooling, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EarlySchooling, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EarlySchooling, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.AcademicAchievement, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AcademicAchievement, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AcademicAchievement, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PersonalValueSystem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PersonalValueSystem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonalValueSystem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @*<input type="submit" value="Create" class="btn btn-default" />*@
                <button id="btnSave" onclick="BiographyAdd()" class="btn btn-default">Save</button>
            </div>
        </div>
    </div>
}

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function BiographyAdd() {
            let biography = {
                PenPicture: $("#PenPicture").val(),
                FamilyBackground: $("#FamilyBackground").val(),
                EarlySchooling: $("#EarlySchooling").val(),
                AcademicAchievement: $("#AcademicAchievement").val(),
                PersonalValueSystem: $("#PersonalValueSystem").val(),
            }

            $.ajax({
                type: 'post',
                url: '/api/courseMembers/Biography',
                data: biography,
                datatype: 'json',
                success: function (data, textStatus, xhr) {
                    alert("success");
                    //alert(xhr.getResponseHeader('location'));
                },
                error: function () {
                    alert('Operation Failed!')
                }
            })
        }
    </script>
}
