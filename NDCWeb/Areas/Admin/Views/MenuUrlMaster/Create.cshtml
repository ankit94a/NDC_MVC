@model NDCWeb.Areas.Admin.View_Models.MenuUrlMasterCrtVM

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>MenuUrlMasterCrtVM</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.UrlPrefix, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UrlPrefix, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UrlPrefix, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UrlArea, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
        <div class="col-md-10">
            @Html.DropDownList("UrlArea", (IEnumerable<SelectListItem>)ViewBag.UrlArea, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UrlArea, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Controller, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Controller, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Controller, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Action, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Action, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Action, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.PageType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.PageType, "--Select--", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PageType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MenuLevel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.MenuLevel, "--Select--", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MenuLevel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
