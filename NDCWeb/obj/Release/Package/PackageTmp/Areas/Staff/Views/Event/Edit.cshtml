@model NDCWeb.Areas.Staff.View_Models.EventUpdVM

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Staff/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="card">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="card-header">
                <h4>Update Event Detail</h4>
            </div>
            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.EventId)
                <div class="form-row">
                    <div class="form-group col-md-12">
                        <label for="EventName" class="control-label">Event Name</label>
                        @*@Html.LabelFor(model => model.EventName, htmlAttributes: new { @class = "control-label" })*@
                        @Html.EditorFor(model => model.EventName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EventName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.EventVenu, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.EventVenu, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EventVenu, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-3">
                        <label for="EventDate" class="control-label">Event Date</label>
                        @*@Html.LabelFor(model => model.EventDate, htmlAttributes: new { @class = "control-label" })*@
                        @Html.EditorFor(model => model.EventDate, new { htmlAttributes = new { @class = "form-control datepickerJq1", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-2">
                        @if (Model.EventTime != null)
                        {
                            DateTime times1 = Convert.ToDateTime(Model.EventTime);
                            string times = times1.ToString("hh:mm");
                            <label for="EventTime" class="control-label">Event Time</label>
                            @*@Html.LabelFor(model => model.EventTime, htmlAttributes: new { @class = "control-label" })*@
                            @Html.EditorFor(model => times, new { htmlAttributes = new { @class = "form-control timepicker" } })
                            @Html.ValidationMessageFor(model => model.EventTime, "", new { @class = "text-danger" })
                        }
                    </div>
                    <div class="form-group col-md-7">
                        @Html.LabelFor(model => model.EventDress, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.EventDress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EventDress, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div><div class="card-footer">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    @Html.ActionLink("Back to List", "Index",null, new { @class = "btn btn-primary" })
                </div>
            </div>
        }
    </div>
</div>

@section Scripts{
    <script>
    </script>

}