@model IEnumerable<NDCWeb.Areas.Staff.View_Models.LockerAllotmentIndxVM>

@{
    ViewBag.Title = "Locker";
}
<style type="text/css">
    .Pager span {
        text-align: center;
        color: #333;
        display: inline-block;
        width: 20px;
        background-color: #B8DBFD;
        margin-right: 3px;
        line-height: 150%;
        border: 1px solid #B8DBFD;
    }

    .Pager a {
        text-align: center;
        display: inline-block;
        width: 20px;
        background-color: #ccc;
        color: #333;
        border: 1px solid #ccc;
        margin-right: 3px;
        line-height: 150%;
        text-decoration: none;
    }
</style>
<div class="container mt-4 mb-4">
    <div class="card shadow">
        <div class="card-header">
            <table>
                <tr>
                    <td style="text-align:left; border-color:white"><span class="pl-2">@ViewBag.Title</span></td>
                    <td style="text-align:right; border-color:white"><a href="@Url.Action("LockerAllotmentEdit")"><i class="btn btn-primary">Update Locker Allotment</i></a></td>
                </tr>
            </table>
            
        
        </div>
        <div class="card-body">
            <div class="form-group row">
                <label class="col-sm-1 col-form-label">Course </label>
                <div class="col-sm-2">
                    @Html.DropDownList("CourseId", (IEnumerable<SelectListItem>)ViewBag.Courses, "Select Course", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <table class="table w-100 text-left" id="tblLocker">
                <thead class="">
                    <tr>
                        <th>SNo.</th>
                        <th>Full Name</th>
                        <th>Locker No</th>
                        @*<th>IAG (SDS)</th>
                        <th>SDS</th>
                        <th>Roles Assign</th>*@
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
            <div class="Pager"></div>
        </div>
        <div class="card-footer">
            <input type="button" id="btnSaveLockerAllotment" value="Save" onclick="saveLockerAllotment()" class="btn btn-primary btn-sm" />
        </div>
    </div>
</div>
@section Scripts{
    <script src="~/Scripts/ASPSnippets_Pager.min.js"></script>
    <script>
        $(function () {
            $('#CourseId').val('65');
            getLockerAllotmentAdd(1);
        });
        //$(document).ready(function () {
        //    getLockerAllotmentAdd(1);
        //});
        $("body").on("click", ".Pager .page", function () {
            getLockerAllotmentAdd(parseInt($(this).attr('page')));
        });
        $('#CourseId').change(function () {
            getLockerAllotmentAdd(1);
        });
        function getLockerAllotmentAdd(pageIndex) {
            //let e = document.getElementById("CourseId");
            let courseid = Number($('#CourseId').find(":selected").val()) || 61;  //Number(e.options[e.selectedIndex].value) || 1;
            $.ajax({
                type: 'post',
                url: '@Url.Action("LoadLockerAllotmentAdd")',
                data: { pageIndex: pageIndex, courseId: courseid },
                datatype: 'json',
                success: successLockerAllotment,
                error: function () {
                    alert('Operation Failed!');
                }
            });
        }
        function successLockerAllotment(response) {
            let pagingParam = response.pagingParam;
            fillLockerAllotment(response);

            $(".Pager").ASPSnippets_Pager({
                ActiveCssClass: "current",
                PagerCssClass: "pager",
                PageIndex: pagingParam.PageIndex,
                PageSize: pagingParam.PageSize,
                RecordCount: pagingParam.RecordCount
            });
        };
        function fillLockerAllotment(data) {
            let $tbody = $('#tblLocker tbody');
            $tbody.empty();
            let participants = data.participants;

            //let iagList = data.iagList;
            //let sdsList = data.sdsList;

            //const filterIAG = iagList.map(n => `<option value="${n.Value}">${n.Text}</option>`).join('');
            //const filterSDS = sdsList.map(n => `<option value="${n.Value}">${n.Text}</option>`).join('');

            //const ddlIAG = `<select name="ddl_iag" class='form-control-sm'>${filterIAG}</select>`;
            //const ddlSDS = `<select name="ddl_sds" class='form-control-sm'>${filterSDS}</select>`;

            $.each(participants, function (i, participant) {
                //let firstName = participant.FirstName || '';
                //let middleName = participant.MiddleName || '';
                //let lastName = participant.LastName || '';
                //let fullName = getEmptyIfNull(participant.FirstName) + ' ' + getEmptyIfNull(participant.MiddleName) + ' ' + getEmptyIfNull(participant.LastName);
                $tbody.append(`
                    <tr>
                        <td>${i + 1}<input type="hidden" name="hdnCourseMemberId" value="${participant.CourseMemberId}"></td>
                        <td>${participant.FullName}</td>
                        <td><input class='form-control-sm' type="text" id="LockerNo_${i}" name="lockerNo" value=""/></td>
                        
                        
                    </tr>
                `);
            });
        }
        //<td>${ddlIAG}</td>
        //    <td>${ddlSDS}</td>
        //<td><input class='form-control-sm' type="text" id="RolesAssign_${i}" name="RolesAssign" value=""/></td>
        function saveLockerAllotment() {
            let lockerAllotmentList = storeLockerAllotment();
            let lockerAllotments = JSON.stringify(lockerAllotmentList);
            $.ajax({
                type: 'post',
                url: '/api/staffMasterApi/LockerAllotmentAdd',
                data: lockerAllotments,
                contentType: "application/json; charset=utf-8",
                datatype: 'json',
                success: function (data, textStatus, xhr) {
                    toastr.info(textStatus);
                    getLockerAllotmentAdd(1);
                },
                error: function () {
                    alert('Operation Failed!');
                }
            });
        }
        function storeLockerAllotment() {
            let lockerAllotments = [];
            $("#tblLocker TBODY TR").each(function () {
                let row = $(this);
                let lockerAllotment = {
                    FullName: row.find("TD").eq(1).html(),
                    CourseMemberId: row.find('input[name="hdnCourseMemberId"]').val(),
                    LockerNo: row.find('input[name="lockerNo"]').val(),
                    //IAG: row.find('select[name="ddl_iag"] option:selected').val(),
                    //SDSId: row.find('select[name="ddl_sds"] option:selected').val(),
                    //RolesAssign: row.find('input[name="RolesAssign"]').val(),
                };
                lockerAllotments.push(lockerAllotment);
            });
            return lockerAllotments;
        }

        function checkRowValidation(e) {
            let row = $(e).closest("tr");
            let lockerNo = row.find('input[name="lockerNo"]').val() || null;
            //let IAG = row.find('select[name="ddl_iag"] option:selected').val() || null;
            //let SDSId = row.find('select[name="ddl_sds"] option:selected').val() || null;
            if (lockerNo == null) {
                row.find('input[name="chkValidate"]').checked = false;
            }
            else {
                row.find('input[name="chkValidate"]').checked = true;
            }
            //if (lockerNo == null || SDSId == null || IAG == null) {
            //    row.find('input[name="chkValidate"]').checked = false;
            //}
            //else {
            //    row.find('input[name="chkValidate"]').checked = true;
            //}
        }

        function storeLockerAllotment2() {
            let ttlRow = $('#total_rows').val();
            let lockerAllotments = [];
            for (i = 1, j = 0; i <= ttlRow; i++ , j++) {
                lockerAllotments[j] = {
                    LockerNo: $('#LockerNo_' + i).val(),
                    CourseId: $('#CourseId_' + i).val(),
                    //SDSId: $('#SDSId _' + i).val(),
                    //ADSId: $('#ADSId _' + i).val(),
                    //RolesAssign: $('#RolesAssign_' + i).val(),
                };
            }
            return lockerAllotments;
        }
    </script>
}
