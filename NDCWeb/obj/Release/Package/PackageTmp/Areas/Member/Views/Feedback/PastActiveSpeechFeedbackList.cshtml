@model IEnumerable<NDCWeb.Areas.Staff.View_Models.SpeechEventIndxVM>
@using NDCWeb.Infrastructure.Extensions;
@{
    ViewBag.Title = "List of Subject, Topic, and Speaker for feedback";
}
@Styles.Render("~/bundles/datatables/ButtonCss")
<link href="~/Component/DataTable2/Buttons-1.6.1/css/buttons.dataTables.min.css" rel="stylesheet" />
<link href="~/Component/DataTable2/Buttons-1.6.1/css/buttons.jqueryui.min.css" rel="stylesheet" />
<div class="container mb-4 mt-4">
    <div class="card">
        <div class="card-header">
            <a href=@Url.Action("SpeechFeedbackList") class="btn btn-outline-info btn-sm pull-right">Feedback History</a>&nbsp;
            <div class="card-title">@ViewBag.Title</div>
        </div>

        <table class="table w-100" id="myTable">
            <thead>
                <tr>
                    <th></th>
                    <th style="vertical-align:middle">SNo.</th>

                    <!--<th style="vertical-align:middle">
                        Date
                        @*@Html.DisplayNameFor(model => model.SpeechDate)*@
                    </th>-->
                    <th style="vertical-align:middle">
                        @Html.DisplayName("Subject")
                    </th>
                    <th style="vertical-align:middle">
                        @Html.DisplayName("Topic")
                    </th>
                    <th style="vertical-align:middle">
                        @Html.DisplayName("Speaker")
                    </th>
                    <th style="vertical-align:middle">
                        Start Date
                        @*@Html.DisplayNameFor(model => model.FeedbackStartDate)*@
                    </th>
                    <th style="vertical-align:middle">
                        End Date
                        @*@Html.DisplayNameFor(model => model.FeedbackEndDate)*@
                    </th>
                    <th style="vertical-align:middle">
                        @Html.DisplayNameFor(model => model.Active)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @{int sno = 0;}
                @foreach (var item in Model)
                {

                    <tr>

                        <td>
                            @*@{ sno++;}
                                @sno*@
                        </td>
                        <td>
                            @*@Html.DisplayFor(modelItem => item.SpeechDate)*@
                            @{ sno++;}
                            @sno
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Speakers.Topics.Subjects.SubjectName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Speakers.Topics.TopicName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Speakers.FullName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FeedbackStartDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FeedbackEndDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Active)
                        </td>
                        <td>
                            @Html.EncodedActionLink("Add Feedback", "AddSpeakerFeedback", "Feedback", "member", new { speechId = item.SpeechEventId }, new { @class = "btn btn-primary btn-sm" }, "")
                        </td>

                    </tr>

                }
            </tbody>
        </table>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/datatables/ButtonJs")
    <script>
    //LoadJDT('#myTable');

    function Delete(id, event) {
        var TableId = "#myTable";
        var Jsonurl = '@Url.Action("DeleteOnConfirm")';
        DeleteJDTRow(id, event, TableId, Jsonurl)
    }
    </script>
    <script>
        $(document).ready(function () {
            var crrtdate = getDateTime();
            var fileName = 'SPEAKER FEEDBACK LIST_' + crrtdate;
            oTable = $('#myTable').DataTable({
                "scrollX": true,
                "processing": true,
                //"order": [[0, "desc"]],
                "order":[[1,""]],
                "columnDefs": [{ "targets": [0], "visible": false, "searchable": false }],
                dom: 'Bfrtip',
                buttons: [
                    {
                        extend: 'excelHtml5',
                        text: '<i class="fa fa-file-excel-o"> Excel</i>',
                        exportOptions: {
                            columns: ':visible',
                            columns: [0, 1, 2, 3, 4, 5]
                        }
                    },
                    {
                        extend: 'pdfHtml5',
                        orientation: 'landscape',
                        pageSize: 'A4',
                        text: '<i class="fa fa-file-pdf-o"> PDF</i>',
                        exportOptions: {
                            columns: [0, 1, 2, 3, 4, 5],
                            alignment: 'center'
                        },
                        layout: 'lightHorizontalLines',
                        title: fileName,
                        titleAttr: 'PDF',
                        customize: function (doc) {
                            doc.content.splice(0, 1);
                            doc['header'] = (function () {
                                return {
                                    columns: [
                                        {
                                            alignment: 'center',
                                            fontSize: 13,
                                            bold: true,
                                            decoration: 'underline',
                                            text: 'SPEAKER FEEDBACK LIST'
                                        }
                                    ],
                                    margin: 10,
                                    alignment: 'center'
                                }
                            });
                            var objLayout = {};
                            objLayout['hLineWidth'] = function (i) { return .5; };
                            objLayout['vLineWidth'] = function (i) { return .5; };
                            objLayout['hLineColor'] = function (i) { return '#000'; };
                            objLayout['vLineColor'] = function (i) { return '#000'; };
                            objLayout['paddingLeft'] = function (i) { return 4; };
                            objLayout['paddingRight'] = function (i) { return 4; };
                            doc.content[0].layout = objLayout;
                            doc.content[0].alignment = 'center'
                        }
                    },
                    'colvis'
                ],
                select: true
            });
            oTable.on('order.dt search.dt', function () {
                oTable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();
            oTable.on('order.dt search.dt', function () {
                oTable.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                    oTable.cell(cell).invalidate('dom');
                });
            }).draw();
        });
    </script>
}