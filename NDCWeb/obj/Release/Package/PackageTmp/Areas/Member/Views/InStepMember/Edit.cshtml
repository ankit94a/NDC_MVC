@model NDCWeb.Areas.Member.View_Models.InStepRegistrationVM

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Staff/Views/Shared/_Layout.cshtml";

}
@Styles.Render("~/bundles/datatables/ButtonCss")
<link href="~/Component/DataTable2/Buttons-1.6.1/css/buttons.dataTables.min.css" rel="stylesheet" />
<link href="~/Component/DataTable2/Buttons-1.6.1/css/buttons.jqueryui.min.css" rel="stylesheet" />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Update In-Step Course Participent Data</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.InStepRegId)
        @Html.HiddenFor(model => model.CourseId)

        <div class="card-body">
            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.WhatsappNo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.WhatsappNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.WhatsappNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group col-md-4">
                @Html.Label("Individual Photograph", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    <input type="hidden" id="PhotoPath" name="PhotoPath" />
                    <input id="picfile" type="file" name="picfile" multiple accept="image/jpeg,image/png" onchange="imgValidateEdit('picfile', 'PhotoPath');" class="uploadify-button form-control-file" />
                    @Html.ValidationMessageFor(model => model.PhotoPath, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-row">
                @*<div class="form-group col-md-4">
                        @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.HonourAward, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.HonourAward, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HonourAward, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">

                        @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control datepickerJq1", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("Category", (IEnumerable<SelectListItem>)ViewBag.Gender, "-- Select --", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.ServicesCategory, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ServicesCategory, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ServicesCategory, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.ServiceNo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ServiceNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ServiceNo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.BranchDepartment, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.BranchDepartment, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BranchDepartment, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.DateOfCommissioning, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.DateOfCommissioning, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DateOfCommissioning, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.SeniorityYear, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.SeniorityYear, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SeniorityYear, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.AddressLocal, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.AddressLocal, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddressLocal, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.AddressPermanent, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.AddressPermanent, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddressPermanent, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.NOKName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.NOKName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NOKName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.NOKContact, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.NOKContact, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NOKContact, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PassportNo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PassportNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PassportNo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PassportName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PassportName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PassportName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PassportAuthority, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.PassportAuthority, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PassportAuthority, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-row">
                @*<div class="form-group col-md-4">
                        @Html.LabelFor(model => model.PassportDocPath, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.PassportDocPath, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PassportDocPath, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.AadhaarNo, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.AadhaarNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AadhaarNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group col-md-4">
                        @Html.LabelFor(model => model.AadhaarDocPath, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.AadhaarDocPath, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AadhaarDocPath, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.BioData, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.BioData, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BioData, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.ArrivalTime, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ArrivalTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ArrivalTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.ArrivalMode, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ArrivalMode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ArrivalMode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.DepartureTime, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.DepartureTime, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DepartureTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.DepartureMode, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.DepartureMode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DepartureMode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>


            <div class="form-row">
                @*<div class="form-group col-md-4">
                        @Html.LabelFor(model => model.ApprovedNominationDocPath, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ApprovedNominationDocPath, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ApprovedNominationDocPath, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Approved, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Approved)
                            @Html.ValidationMessageFor(model => model.Approved, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.ApprovedDate, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ApprovedDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ApprovedDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.AnyOtherRequirement, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.AnyOtherRequirement, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AnyOtherRequirement, "", new { @class = "text-danger" })
                    </div>

                    @Html.LabelFor(model => model.ServicesCategory, htmlAttributes: new { @class = "form-label  col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownList("Service", (IEnumerable<SelectListItem>)ViewBag.Service, "-- Select --", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ServicesCategory, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.RankId, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.RankId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.DropDownList("RankId", new SelectList(string.Empty, "Value", "Text"), "-- Select --", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RankId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>

    </div>
    <div class="card-footer">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
        </div>
    </div>
}

@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/daterange")
    <script src="~/Areas/Member/Component/Custom/js/customScript.js"></script>
    <script>
         $(document).ready(function () {
     $('#Service').val('@Model.ServicesCategory');

     if ('@ViewData["SelectedRank"]' != null) {
         bindrank();
     }
     $("#Service").change(function () {
         $("#RankId").empty();
         bindrank();
     });
 });

     function bindrank() {
     $.ajax({
         type: 'get',
         url: '/api/rankMasters/GetRanks/service/' + $('#Service').val(),
         datatype: 'json',
         success: function (ranks) {
             $.each(ranks, function (i, rank) {
                 $('#RankId').append('<option value="' + rank.Value + '">' + rank.Text + '</option>');
             });
             if ('@ViewData["SelectedRank"]' != 0) {
                 $("#RankId").val('@ViewData["SelectedRank"]');
             }
         },
         error: function () {
             alert('Server Not Found');
         }
     });
        }
        function imgValidateEdit(fileUploadId, fileLocId) {
        let fileTypes = ['jpg', 'jpeg', 'png'];
        let extValidate = fileExtensionValidation(fileUploadId, fileTypes);
        let sizeValidate = fileSizeValidation(fileUploadId, 750);
        if (extValidate == true && sizeValidate == true) {
            let url = '@Url.Action("ImageUpload")';
            Imageupload(fileUploadId, fileLocId, url);
        }
    }
    </script>
}
